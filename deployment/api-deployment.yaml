apiVersion: v1
kind: Service
metadata:
  name: ffl-playoffs-api
  namespace: ffl-playoffs
  labels:
    app: ffl-playoffs-api
spec:
  selector:
    app: ffl-playoffs-api
  ports:
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  - name: health
    port: 8081
    targetPort: 8081
    protocol: TCP
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ffl-playoffs-api
  namespace: ffl-playoffs
  labels:
    app: ffl-playoffs-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ffl-playoffs-api
  template:
    metadata:
      labels:
        app: ffl-playoffs-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: ffl-playoffs-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000

      containers:
      # Main API Container (listens on localhost:8080 ONLY)
      - name: api
        image: ffl-playoffs-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: management
          containerPort: 8081
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: ffl-playoffs-secrets
              key: mongodb-uri
        - name: MONGODB_DATABASE
          value: "ffl_playoffs"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL

      # Auth Service Container (gRPC on localhost:9191)
      - name: auth-service
        image: ffl-playoffs-auth:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: grpc
          containerPort: 9191
          protocol: TCP
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: ffl-playoffs-secrets
              key: mongodb-uri
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: ffl-playoffs-secrets
              key: google-client-id
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:9191
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:9191
          initialDelaySeconds: 10
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL

      # Envoy Sidecar (ONLY container exposed externally on port 443)
      - name: envoy
        image: envoyproxy/envoy:v1.28-latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: https
          containerPort: 443
          protocol: TCP
        - name: admin
          containerPort: 9901
          protocol: TCP
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
          readOnly: true
        command:
        - /usr/local/bin/envoy
        args:
        - -c
        - /etc/envoy/envoy.yaml
        - --service-cluster
        - ffl-playoffs-api
        - --service-node
        - $(POD_NAME)
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL

      volumes:
      - name: envoy-config
        configMap:
          name: envoy-config

      # Graceful shutdown
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: ffl-playoffs
  labels:
    app: ffl-playoffs-api
data:
  envoy.yaml: |
{{ .Files.Get "deployment/envoy.yaml" | indent 4 }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ffl-playoffs-api
  namespace: ffl-playoffs
  labels:
    app: ffl-playoffs-api
